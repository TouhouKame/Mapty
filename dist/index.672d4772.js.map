{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in mins\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling'\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// const run1 = new Running([49, -121], 5.2, 24, 178);\n// const cycling1 = new Cycling([49, -121], 27, 95, 523);\n// console.log(run1, cycling1);\n\n///////////////////////////////////////////////////////////\n// APPLICATION ARCHITECTURE\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nconst resetButton = document.querySelector('.btn__reset--all');\nconst locationError = document.querySelector('.div__error');\n// const popoutDiv = document.querySelector('.div__popout');\n// const editBtn = document.querySelector('.div__edit');\n// const deleteBtn = document.querySelector('.div__delete');\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // Attach event handlers\n    form.addEventListener('submit', this._newWorkout.bind(this));\n\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n    // containerWorkouts.addEventListener('click',this._togglePopoutMenu.bind(this));\n    resetButton.addEventListener('click', this.reset);\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          // alert('Could not get your position');\n          locationError.classList.remove('hidden');\n          setTimeout(() => (locationError.style.opacity = 0), 5000);\n          setTimeout(() => locationError.classList.add('hidden'), 6000);\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    console.log(\n      `https://www.google.ca/maps/@${latitude},${longitude},7z?entry=ttu`\n    );\n\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n    // console.log(map);\n\n    L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        '';\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // if workout is running create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      //  Check if data is valid\n      if (\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert('Inputs must be positive numbers!');\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // if workout is cycling create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert('Inputs must be positive numbers!');\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form + clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    // const popoutWindow = `\n    //   <div class=\"div__popout\">\n    //     <img src=\"edit.png\" alt=\"Edit\">\n    //   </div>\n    //   <div class=\"div__popout\">\n    //     <img src=\"delete.png\" alt=\"Delete\">\n    //   </div>`;\n    let html = `\n        <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${\n              workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n            }</span>\n            <span class=\"workout__value\">${workout.distance}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⏱</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>`;\n\n    if (workout.type === 'running') {\n      html += `\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n            <span class=\"workout__unit\">min/km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">🦶🏼</span>\n            <span class=\"workout__value\">${workout.cadence}</span>\n            <span class=\"workout__unit\">spm</span>\n          </div>\n        </li>\n          `;\n    }\n    if (workout.type === 'cycling') {\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>`;\n    }\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // using the public interface\n    // workout.click();\n  }\n\n  // _togglePopoutMenu(e) {\n  //   e.target.closest('.workout').style.transform = 'translateX(-27)';\n  //   popoutDiv.style.transform = 'translateX(238)';\n  //   popoutDiv.style.opacity = '1';\n  // }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}